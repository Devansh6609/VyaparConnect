"use strict";(()=>{var e={};e.id=3744,e.ids=[3744],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},31843:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>v,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var o={};t.r(o),t.d(o,{GET:()=>d});var a=t(49303),s=t(88716),n=t(60670),p=t(87070),i=t(6113),u=t.n(i);async function d(e){try{let e=Math.round(new Date().getTime()/1e3),r={timestamp:e,folder:"vyaparconnect/products"},t=u().createHash("sha1").update(Object.keys(r).map(e=>`${e}=${r[e]}`).join("&")+process.env.CLOUDINARY_API_SECRET).digest("hex");return p.NextResponse.json({cloudName:process.env.CLOUDINARY_CLOUD_NAME,apiKey:process.env.CLOUDINARY_API_KEY,timestamp:e,signature:t,folder:r.folder})}catch(e){return console.error("Error generating Cloudinary signature:",e),p.NextResponse.json({error:"Failed to sign upload"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/uploads/sign/route",pathname:"/api/uploads/sign",filename:"route",bundlePath:"app/api/uploads/sign/route"},resolvedPagePath:"C:\\vyaparconnect-crm\\src\\app\\api\\uploads\\sign\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:l,staticGenerationAsyncStorage:g,serverHooks:m}=c,v="/api/uploads/sign/route";function h(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[8948,5972],()=>t(31843));module.exports=o})();