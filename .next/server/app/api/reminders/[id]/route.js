"use strict";(()=>{var e={};e.id=7896,e.ids=[7896],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},72874:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>v,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var i={};t.r(i),t.d(i,{DELETE:()=>p,PUT:()=>u});var n=t(49303),s=t(88716),a=t(60670),o=t(87070),d=t(20728);async function u(e,{params:r}){let t=r.id;try{let{status:r}=await e.json();if(!r||"PENDING"!==r&&"COMPLETED"!==r)return o.NextResponse.json({error:"Invalid status provided"},{status:400});let i=await d.Z.reminder.update({where:{id:t},data:{status:r}});return o.NextResponse.json(i)}catch(e){return console.error(`Failed to update reminder ${t}:`,e),o.NextResponse.json({error:"Failed to update reminder"},{status:500})}}async function p(e,{params:r}){let t=r.id;try{return await d.Z.reminder.delete({where:{id:t}}),o.NextResponse.json({success:!0,message:"Reminder deleted"})}catch(e){return console.error(`Failed to delete reminder ${t}:`,e),o.NextResponse.json({error:"Failed to delete reminder"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/reminders/[id]/route",pathname:"/api/reminders/[id]",filename:"route",bundlePath:"app/api/reminders/[id]/route"},resolvedPagePath:"C:\\vyaparconnect-crm\\src\\app\\api\\reminders\\[id]\\route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:x}=l,h="/api/reminders/[id]/route";function v(){return(0,a.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}},20728:(e,r,t)=>{t.d(r,{Z:()=>n});let i=require("@prisma/client"),n=globalThis.prisma||new i.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),i=r.X(0,[8948,5972],()=>t(72874));module.exports=i})();