"use strict";(()=>{var e={};e.id=9445,e.ids=[9445],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61633:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>v,patchFetch:()=>T,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var n={};r.r(n),r.d(n,{POST:()=>d});var a=r(49303),o=r(88716),s=r(60670),i=r(87070),c=r(20728),u=r(21178);async function d(e,t){let{id:r}=await t.params;try{if(!r)return i.NextResponse.json({error:"Contact ID is required"},{status:400});let e=await c.Z.contact.findUnique({where:{id:r}});return e&&e.unreadCount>0&&(await c.Z.contact.update({where:{id:r},data:{unreadCount:0}}),await (0,u.F)("contact-read",{contactId:r})),i.NextResponse.json({success:!0})}catch(e){return console.error(`reset-unread error for contact ${r}:`,e),i.NextResponse.json({error:"Failed to reset unread count"},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/contacts/[id]/reset-unread/route",pathname:"/api/contacts/[id]/reset-unread",filename:"route",bundlePath:"app/api/contacts/[id]/reset-unread/route"},resolvedPagePath:"C:\\vyaparconnect-crm\\src\\app\\api\\contacts\\[id]\\reset-unread\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:h}=p,v="/api/contacts/[id]/reset-unread/route";function T(){return(0,s.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},20728:(e,t,r)=>{r.d(t,{Z:()=>a});let n=require("@prisma/client"),a=globalThis.prisma||new n.PrismaClient},21178:(e,t,r)=>{r.d(t,{F:()=>n});async function n(e,t){try{let r=process.env.PORT||"3000",n=`http://localhost:${r}/api/socket/emit`,a=process.env.SOCKET_EMITTER_SECRET;if(!a){console.error("SOCKET_EMITTER_SECRET is not defined. Cannot emit socket event.");return}fetch(n,{method:"POST",headers:{"Content-Type":"application/json","x-emitter-secret":a},body:JSON.stringify({event:e,data:t})}).catch(t=>{console.error(`Failed to emit socket event '${e}' to ${n}:`,t.message)})}catch(e){console.error("Error preparing socket event emission:",e)}}}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[8948,5972],()=>r(61633));module.exports=n})();